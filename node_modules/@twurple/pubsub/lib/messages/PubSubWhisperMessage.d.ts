import type { HelixUserType } from '@twurple/common';
import { DataObject } from '@twurple/common';
import type { PubSubChatMessageBadge, PubSubChatMessageEmote } from './PubSubMessage';
/** @private */
export interface PubSubWhisperTags {
    login: string;
    display_name: string;
    color: string;
    user_type: HelixUserType;
    emotes: PubSubChatMessageEmote[];
    badges: PubSubChatMessageBadge[];
}
/** @private */
export interface PubSubWhisperRecipient {
    id: number;
    username: string;
    display_name: string;
    color: string;
    user_type: HelixUserType;
    badges: PubSubChatMessageBadge[];
    profile_image: string | null;
}
/** @private */
export interface PubSubWhisperMessageContent {
    id: number;
    message_id: string;
    thread_id: string;
    body: string;
    sent_ts: number;
    from_id: number;
    tags: PubSubWhisperTags;
    recipient: PubSubWhisperRecipient;
}
/** @private */
export interface PubSubWhisperMessageData {
    type: 'whisper_received';
    data: string;
    data_object: PubSubWhisperMessageContent;
}
/**
 * A message informing about a whisper being received from another user.
 */
export declare class PubSubWhisperMessage extends DataObject<PubSubWhisperMessageData> {
    /**
     * The message text.
     */
    get text(): string;
    /**
     * The ID of the user who sent the whisper.
     */
    get senderId(): string;
    /**
     * The name of the user who sent the whisper.
     */
    get senderName(): string;
    /**
     * The display name of the user who sent the whisper.
     */
    get senderDisplayName(): string;
}
//# sourceMappingURL=PubSubWhisperMessage.d.ts.map